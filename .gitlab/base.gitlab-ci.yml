#-----------------------------------
# variables:
# Set the variable through the GitLab UI, or set it here by
# uncommenting the following two lines and replacing the Agent's path with your own:
# variables:
#   CI_REGISTRY_PROXY: 192.168.2.29:8443/proxy_cache/
#   CA_CERTIFICATE:  【192.168.2.29的SSL证书】
#   CI_REGISTRY: 192.168.2.29:8443
#   CI_REGISTRY_USER: robot$$ruoyi-cloud+gitlab 【注意需要两个$,前一个$为转义字符】【harbor roboot的Name,需要先在harbor创建仓库后，再创建robot账号】
#   CI_REGISTRY_PASSWORD:【harbor roboot的Secret】
#   SONAR_HOST_URL:  http://192.168.2.28:9000/
#   SONAR_TOKEN:【填入个人账号的token】
#   NEXUS_REPO_USERNAME: 私有仓库账号
#   NEXUS_REPO_PASSWORD: 私有仓库密码
#   NEXUS_REPO_MAVEN_PUBLIC: http://192.168.2.28:8081/repository/maven-public/
#   NEXUS_REPO_RELEASES_URL: http://192.168.2.28:8081/repository/maven-releases/
#   NEXUS_REPO_SNAPSHOTS_URL: http://192.168.2.28:8081/repository/maven-snapshots/
#   CVE_URL_MODIFIED: http://192.168.2.28:8081/repository/raw-cve/feeds/json/cve/1.1/nvdcve-1.1-modified.json.gz
#   CVE_URL_BASE: http://192.168.2.28:8081/repository/raw-cve/feeds/json/cve/1.1/nvdcve-1.1-%d.json.gz
#   MANIFEST_PROJECT_ID: 【管理项目k8s yaml的项目编号，如 1】

include:
  - .gitlab/jobs/build.yml
  - .gitlab/jobs/upload.yml
  - .gitlab/jobs/deploy.yml

variables:
  LOCAL_M2_REPOS: .m2/repository
  MAVEN_OPTS: "-Dmaven.repo.local=${LOCAL_M2_REPOS}"
  SONAR_CACHE: .sonar/cache
  #版本,docker image,jar
  VERSION: $CI_COMMIT_SHORT_SHA
  MAVEN_CMD_VERSION: -Dsha1=-$VERSION
  PROJECT_NAME: ruoyi-cloud
  #BE
  SONAR_BE_PROJECT_KEY: ruoyi-be
  #FE
  SONAR_FE_PROJECT_KEY: ruoyi-fe
  PROJECT_FE_DIR: ruoyi-ui
  PROJECT_FE_DIR_SRC: ruoyi-ui/src
  PROJECT_FE_DIR_DIST: ${PROJECT_FE_DIR}/dist
  PROJECT_FE_DIR_NODE_MODULES: ${PROJECT_FE_DIR}/node_modules

workflow:
  rules:
    - if: '$CI_COMMIT_TAG'
      variables:
          VERSION: $CI_COMMIT_TAG
          MAVEN_CMD_VERSION: -Drevision=$VERSION -Dchangelist=
    - when: always

stages:
  # - .pre
  #编译
  - build
  #测试
  - test
  #扫描
  - scan
  #打包
  - package
  #上传镜像
  - upload
  - predeploy
  - deploy
  # - .post

image-upload-db:
  extends: .image-upload-service
  variables:
    CONTEXT_NAME: "docker/mysql"
    IMAGE_NAME: "$PROJECT_NAME/mysql"
    MOVE_FILE_SCRIPT: "mv sql/* docker/mysql/db"

predeploy:
 image: ${CI_REGISTRY_PROXY}curlimages/curl:7.83.1
 stage: predeploy
 script:
   - echo -n "IMAGE_REF=" >> deploy.env
   - echo -n "$CI_REGISTRY/$PROJECT_NAME/mysql:$VERSION" >> deploy.env
 after_script:
   - cat deploy.env
 artifacts:
   reports:
     dotenv: deploy.env
 rules:
 - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "dev" || $CI_COMMIT_BRANCH =~ /^release/ || $CI_COMMIT_TAG'
   when: on_success
 - when: never


